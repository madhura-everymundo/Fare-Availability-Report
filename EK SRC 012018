SELECT
  orig,
  dest,
  event_id,
  event_createdat,
  price,
  depdate,
  retdate,
  total_price_usd,
  src_created_at,
  time_diff,
  row_num
FROM
  (
    SELECT
      orig,
      dest,
      event_id,
      --event_orig,
      --event_dest,
      --event_dep_date,
      to_date(depdate, 'YYYYMMDD')                            AS depdate,
      to_date(retdate, 'YYYYMMDD')                            AS retdate,
      site_edition,
      event_site_edition,
      total_price_usd,
      price :: FLOAT                                          AS price,
      (src_created_at AT TIME ZONE 'UTC') AT TIME ZONE 'EST'  AS src_created_at,
      (event_createdat AT TIME ZONE 'UTC') AT TIME ZONE 'EST' AS event_createdat,
      (event_createdat- src_created_at)                       AS time_diff,
      ROW_NUMBER()
      OVER (
        PARTITION BY event_id
        ORDER BY time_diff )                                  AS row_num
    FROM
      (

          (
            SELECT
              _id                                                  AS event_id,
              LEFT(json_extract_path_text(variables, 'route'), 3)  AS event_orig,
              RIGHT(json_extract_path_text(variables, 'route'), 3) AS event_dest,
              LEFT(json_extract_path_text(variables, 'date'), 8)   AS event_dep_date,
              RIGHT(json_extract_path_text(variables, 'date'), 8)  AS event_ret_date,
              json_extract_path_text(variables, 'USDtotalPrice')   AS price,
              json_extract_path_text(variables, 'siteEdition')     AS event_site_edition,
              __createdat                                          AS event_createdat
            FROM em_cmp_lib_tracking_001
            WHERE
              __createdat >= '2018-01-01'
              AND event_action = 'Book'
              AND airline_code = 'ek'
              AND json_extract_path_text(variables, 'journeyType') = 'RT'
              AND json_extract_path_text(variables, 'fareClass') = 'Economy'
          ) ET
          LEFT JOIN
          (SELECT
             _id,
             orig :: VARCHAR(3),
             dest :: VARCHAR(3),
             regexp_replace(dep_date :: DATE, '[^0-9\.]+') AS depdate,
             regexp_replace(ret_date :: DATE, '[^0-9\.]+') AS retdate,
             total_price_usd,
             site_edition,
             src_created_at
           FROM em_farenet2_normalized_main_001
           WHERE
             __createdat >= '2018-01-01'
             AND airline_code = 'ek'
             AND dep_farenet_class = 'Economy'
             AND journey = 'Round Trip'
          ) FN
            ON (
            ET.event_createdat :: DATE = FN.src_created_at :: DATE
            AND dest = ET.event_dest
            AND orig = ET.event_orig
            AND depdate = event_dep_date
            AND retdate = event_ret_date
            )
      )
    WHERE (event_createdat-src_created_at)>=0
  ) myTable
WHERE row_num = '1'
